<div class="container hidden" id="container">
  <div class="row">
    <div class="col-xs-4" id="store">
      <h4>Store Location:</h4>
      <p id="storeaddr"><%= @store.address %></p>
      <hr>
      <h4>Nearest Divvy Location <%= image_tag src="divvy_reduced.png" %> :</h4>
      <p><%= @minStation['stationName'] %></p>
      <p><%= @minStation['stAddress1'] %>, <%= @minStation['stAddress2'] %>
        <% if !@minStation['stAddress2'].blank? %>
          , 
        <% end %>
        <%= @minStation['city'] %>
      </p>
      <% if !@minStation['location'].blank? %>
        <p>@ <%= @minStation['location'] %></p>
      <% else %>
        <p>@ <%= @minStation['latitude'] %>, <%= @minStation['longitude'] %></p>
      <% end %>
      <hr>
      <div id="map"></div>
    </div>
    <div class="col-xs-8" id="nouser">
      <div id="map2"></div>
    </div>
    <div id="user">
      <div class="col-xs-1"></div>
      <div class="col-xs-6">
        <h4>Your Location:</h4>
        <div id="useraddr"></div>
        <hr>
        <h4>Nearest Divvy Location: <%= image_tag src="divvy_blank.png" %></h4>
        <div id="userdivvy"></div>
        <hr>
        <div id="directions">
          <h4 style="color: #003300">Driving Directions To Store:</h4>
        </div>
      </div>
    </div>
  </div>
</div>

<script>

var map;
var address;
var geolocate;
var userLat;
var userLon;
var userCoordinates;

getGeoLocation();

function initMap()
{
  address = "<%= @store.address %>";
  //retrieveCoordinates( address );
}

function initMapSuccess() 
{
  initMap();
  retrieveCoordinates( address, true );
  retrieveAddress( userCoordinates );
  getStoreDirections();
}

function initMapFail()
{
  initMap();
  retrieveCoordinates( address, false );
}

function retrieveCoordinates( address, user )
{
    var lat = <%= @locLat %>;
    var lon = <%= @locLon %>;
    var latlng = { lat: lat, lng: lon };

    var mapOptions = { zoom: 15, center: latlng };
    if( user )
    {
      map = new google.maps.Map(document.getElementById('map'), mapOptions);
    }
    else
    {
      map = new google.maps.Map(document.getElementById('map2'), mapOptions);
    }

    var marker = new google.maps.Marker(
    {
      map: map,
      position: latlng
    });

    addDivvyMarker();
}

function retrieveAddress( latlng )
{
  var geocoder = new google.maps.Geocoder();

  geocoder.geocode( 
    { 'location': latlng },
    function( results, status ) 
    {
      if( status === google.maps.GeocoderStatus.OK && results[0] ) 
      {
        $( "#useraddr" ).html( results[0].formatted_address );
      }
      else
      {
        $( "#useraddr" ).html( userLat.toString() + ", " + userLon.toString() );
      }
    }
  );
}

function addDivvyMarker()
{
  var divvyLat = <%= @minStation['latitude'] %>;
  var divvyLon = <%= @minStation['longitude'] %>;
  var divvyLatLng = new google.maps.LatLng( divvyLat, divvyLon );

  var divvyMarker = new google.maps.Marker(
  {
    position: divvyLatLng,
    icon: "<%= asset_path('divvy_reduced.png') %>"
  });

  divvyMarker.setMap( map );
}

function getGeoLocation() 
{
  var userLat;
  var userLon;

  if( Modernizr.geolocation )
  {
    navigator.geolocation.getCurrentPosition( success, fail );
  }
  else
  {
    $.getScript("https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3kW-f2HVLw3SOIbjnJH5nM6tsQt4odI&callback=initMapFail");
    $( "#container" ).removeClass( "hidden" );
    $( "#nouser" ).show();
  }
}

function success( position )
{  
  userLat = position.coords.latitude;
  userLon = position.coords.longitude;
  userCoordinates = { lat: userLat, lng: userLon };

  $.getScript("https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3kW-f2HVLw3SOIbjnJH5nM6tsQt4odI&callback=initMapSuccess");
  $( "#container" ).removeClass("hidden");
  $( "#user" ).fadeIn();
}

function fail()
{
  $.getScript("https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3kW-f2HVLw3SOIbjnJH5nM6tsQt4odI&callback=initMapFail");
  $( "#container" ).removeClass( "hidden" );
  $( "#nouser" ).show();
}

function getStoreDirections()
{
  var start = userCoordinates;
  var end = address;

  var request = { origin: start, destination: end, travelMode: google.maps.TravelMode.DRIVING };

  var directionsService = new google.maps.DirectionsService();

  directionsService.route( request, function( result, status ) {
    if( status === google.maps.DirectionsStatus.OK )
    {
      var j=result.routes[0].legs[0].steps.length;
      for( var i=0; i<j; ++i )
      {
        $( "#directions" ).append( result.routes[0].legs[0].steps[i].instructions );
        $( "#directions" ).append( " -> " );
        $( "#directions" ).append( result.routes[0].legs[0].steps[i].distance.text );
        $( "#directions" ).append( "<hr class='dir'>" );
      }

    }
  });

  getUserDivvyLocation();
}

function getUserDivvyLocation()
{
  var divvy = <%= raw @divvy.to_json %>;
  var divvyjson = $.parseJSON( divvy );
  var stations = divvyjson.stationBeanList;

  var minimum = 3961;
  var minStation, a, c, d;

  $.each( stations, function( i, station ) {
    curLat = station.latitude;
    curLon = station.longitude;

    diffLat = curLat - userLat;
    diffLon = curLon - userLon;

    a = Math.pow( Math.sin( diffLat / 2.0 ), 2) + Math.cos( userLat ) * Math.cos( curLat ) * Math.pow( Math.sin( diffLon ), 2 )
    c = 2 * Math.atan2( Math.sqrt( a ), Math.sqrt( 1 - a ) )
    d = 3961 * c

    if( d < minimum )
    {
      minimum = d;
      minStation = station;
    }
  });

  var divvyhtml = "";
  divvyhtml += "<p>" + minStation.stationName + "</p>";
  if( minStation.stAddress2 )
  {
    divvyhtml += "<p>" + minStation.stAddress1 + ", " + minStation.stAddress2 + ", " + minStation.city + "</p>";
  }
  else
  {
    divvyhtml += "<p>" + minStation.stAddress1 + ", " + minStation.city + "</p>";
  }
  if( minStation.location )
  {
    divvyhtml += "<p>@ " + minStation.location + "</p>";
  }
  else
  {
    divvyhtml += "<p>@ " + minStation.latitude + ", " + minStation.longitude + "</p>";
  }
  
  $( "#userdivvy" ).html( divvyhtml );
}

</script>